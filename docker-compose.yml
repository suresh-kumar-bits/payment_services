version: '3.8'

services:
  # PostgreSQL Database for Payment Service
  payment_db:
    image: postgres:15-alpine
    container_name: payment-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Superb#915
    ports:
      - "5433:5432"  # Map host port 5433 to container port 5432
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    networks:
      - payment-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Payment Service API
  payment_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payment-service-api
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      payment_db:
        condition: service_healthy
    environment:
      # Database connection
      DB_HOST: payment_db  # Use container name for internal network
      DB_PORT: 5432        # Internal port (not 5433)
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: Superb#915
      # Service configuration
      SERVICE_PORT: 8082
      DEBUG: "true"
      # Inter-service URLs (update when other services are running)
      TRIP_SERVICE_URL: http://host.docker.internal:8081
      NOTIFICATION_SERVICE_URL: http://host.docker.internal:8084
      # Python environment
      PYTHONUNBUFFERED: 1
    volumes:
      # Mount source code for development
      - ./:/app
      # Mount CSV file
      - ./rhfd_payments.csv:/app/rhfd_payments.csv
    networks:
      - payment-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8082/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  payment-network:
    driver: bridge

volumes:
  payment_db_data:
    driver: local